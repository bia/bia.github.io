{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-project-query-tsx-9f600ae4669114b3112d.js","mappings":"gOAoBA,EARoB,SAAC,GAAD,EAAGA,QAAH,OAClBC,EAAAA,EAAAA,IAACC,EAAAA,GAAD,CAAMC,GAAI,CAAEC,GAAI,EAAGC,GAAI,CAAC,EAAG,GAAIC,SAAU,SAD3C,EC6EA,EAvDgB,SAAC,GAAyC,IAA/BN,EAA8B,EAAtCO,KAAQP,QACnBQ,GAAaC,EAAAA,EAAAA,WAAU,CAC3BC,OAAQA,EAAAA,OAAAA,KACRC,KAAM,CAAEC,QAAS,EAAGC,UAAU,4BAC9BC,GAAI,CAAEF,QAAS,EAAGC,UAAU,0BAExBE,GAAYN,EAAAA,EAAAA,WAAU,CAAEC,OAAQA,EAAAA,OAAAA,KAAaM,MAAO,IAAKL,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAC9FK,GAAeR,EAAAA,EAAAA,WAAU,CAAEC,OAAQA,EAAAA,OAAAA,KAAaM,MAAO,IAAML,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAExG,OACEX,EAAAA,EAAAA,IAACiB,EAAAA,EAAD,MACEjB,EAAAA,EAAAA,IAACkB,EAAAA,EAAD,CACEC,MAAOpB,EAAQoB,MACfC,YAAarB,EAAQsB,QACrBC,SAAUvB,EAAQwB,KAClBC,MAAOzB,EAAQ0B,MAAMC,gBAAgBC,OAAQC,MAE7C5B,EAAAA,EAAAA,IAAAA,OAAAA,CAAM6B,KAAK,iBAAiBC,MAAM,YAClC9B,EAAAA,EAAAA,IAAAA,OAAAA,CAAM6B,KAAK,iBAAiBC,MAAM,UAClC9B,EAAAA,EAAAA,IAAAA,OAAAA,CAAM6B,KAAK,gBAAgBC,MAAO/B,EAAQgC,UAC1C/B,EAAAA,EAAAA,IAAAA,OAAAA,CAAM6B,KAAK,gBAAgBC,MAAO/B,EAAQiC,SAE5ChC,EAAAA,EAAAA,IAACiC,EAAAA,EAAD,CAAMT,MAAOzB,EAAQ0B,MAAMC,gBAAgBQ,gBAAiBC,MAAOpC,EAAQoC,QACzEnC,EAAAA,EAAAA,IAACC,EAAAA,GAAD,CACEC,GAAI,CACFkC,SAAS,WACTC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAS,MACTC,OAAO,SACPC,QAAS,EACTC,OAAQ,EACRC,cAAc,YAGhB5C,EAAAA,EAAAA,IAAC6C,EAAAA,SAAAA,IAAD,CAAcC,MAAOvC,IACnBP,EAAAA,EAAAA,IAAC+C,EAAAA,GAAD,CAASC,GAAG,KAAKC,QAAQ,aACtBlD,EAAQoB,SAGbnB,EAAAA,EAAAA,IAAC6C,EAAAA,SAAAA,IAAD,CAAcC,MAAOhC,IACnBd,EAAAA,EAAAA,IAACkD,EAAD,CAAanD,QAASA,QAI5BC,EAAAA,EAAAA,IAACmD,EAAAA,GAAD,MACEnD,EAAAA,EAAAA,IAAC6C,EAAAA,SAAAA,IAAD,CAAcC,MAAO9B,IACnBhB,EAAAA,EAAAA,IAACoD,EAAAA,YAAD,KAAcrD,EAAQsD,QAhDhC,EC/BA,MCQe,YAA+C,IAAjBC,EAAgB,oBAC3D,OAAOC,EAAAA,cAACC,EAAYF,EACrB,C","sources":["webpack://emma/./src/@lekoarts/gatsby-theme-emma/components/project-info.tsx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma/src/components/project.tsx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/project-query.tsx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/project.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { Flex, jsx } from \"theme-ui\"\nimport Item from \"./project-info-item\"\n\ntype ProjectInfoProps = {\n  project: {\n    // client: string\n    // date: string\n    // service: string\n  }\n}\n\nconst ProjectInfo = ({ project }: ProjectInfoProps) => (\n  <Flex sx={{ mt: 4, mb: [2, 4], flexWrap: `wrap` }}>\n    {/* <Item name=\"Client\" content={project.client} /> */}\n    {/* <Item name=\"Date\" content={project.date} /> */}\n    {/* <Item name=\"Service\" content={project.service} /> */}\n  </Flex>\n)\n\nexport default ProjectInfo\n","/** @jsx jsx */\nimport { animated, useSpring, config } from \"react-spring\"\nimport { Container, jsx, Flex, Heading } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Hero from \"./hero\"\nimport ProjectInfo from \"./project-info\"\n\ntype ProjectProps = {\n  data: {\n    project: {\n      body: string\n      excerpt: string\n      client: string\n      color: string\n      date: string\n      service: string\n      slug: string\n      title: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n  [key: string]: any\n}\n\nconst Project = ({ data: { project } }: ProjectProps) => {\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <SEO\n        title={project.title}\n        description={project.excerpt}\n        pathname={project.slug}\n        image={project.cover.childImageSharp.resize!.src}\n      >\n        <meta name=\"twitter:label1\" value=\"Client\" />\n        <meta name=\"twitter:label2\" value=\"Date\" />\n        <meta name=\"twitter:data1\" value={project.client} />\n        <meta name=\"twitter:data2\" value={project.date} />\n      </SEO>\n      <Hero image={project.cover.childImageSharp.gatsbyImageData} color={project.color}>\n        <Flex\n          sx={{\n            position: `absolute`,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            maxWidth: `5xl`,\n            margin: `0 auto`,\n            padding: 4,\n            zIndex: 2,\n            flexDirection: `column`,\n          }}\n        >\n          <animated.div style={titleProps}>\n            <Heading as=\"h1\" variant=\"styles.h1\">\n              {project.title}\n            </Heading>\n          </animated.div>\n          <animated.div style={infoProps}>\n            <ProjectInfo project={project} />\n          </animated.div>\n        </Flex>\n      </Hero>\n      <Container>\n        <animated.div style={contentProps}>\n          <MDXRenderer>{project.body}</MDXRenderer>\n        </animated.div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Project\n","import { graphql } from \"gatsby\"\nimport ProjectComponent from \"../components/project\"\n\nexport default ProjectComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    project(slug: { eq: $slug }) {\n      body\n      excerpt\n      client\n      color\n      date(formatString: $formatString)\n      service\n      slug\n      title\n      cover {\n        childImageSharp {\n          gatsbyImageData(quality: 90, layout: FULL_WIDTH)\n          resize(width: 800) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Project from \"../../../components/project\"\n\ntype Props = {\n  data: {\n    project: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function EmmaCoreProject({ ...props }: Props) {\n  return <Project {...props} />\n}\n"],"names":["project","jsx","Flex","sx","mt","mb","flexWrap","data","titleProps","useSpring","config","from","opacity","transform","to","infoProps","delay","contentProps","Layout","SEO","title","description","excerpt","pathname","slug","image","cover","childImageSharp","resize","src","name","value","client","date","Hero","gatsbyImageData","color","position","bottom","left","right","maxWidth","margin","padding","zIndex","flexDirection","animated","style","Heading","as","variant","ProjectInfo","Container","MDXRenderer","body","props","React","Project"],"sourceRoot":""}